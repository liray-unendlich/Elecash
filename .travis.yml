sudo: required
dist: trusty
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=true
    - CHECK_DOC=1
    - CHECK_LOGPRINT=1
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
  matrix:
# ARM
    - HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" CHECK_DOC=1 CHECK_LOGPRINT=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Win32
    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
# 32-bit + dash
    - HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
# Win64
    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.6 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
# elecashd
    - HOST=x86_64-unknown-linux-gnu PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER" PYZMQ=true
# No wallet
#    - HOST=x86_64-unknown-linux-gnu PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"

before_install:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
    - if [ "$CHECK_LOGPRINT" = 1 ]; then contrib/devtools/logprint-scanner.py; fi
    - unset CC; unset CXX
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=elecash VERSION=$HOST
    - cd elecash-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
deploy:
  provider: releases
  api_key:
    secure: "DDTKQgF121NJO99xa2lxHDcyOiGejfxO1F+nzh/jLm0D/mLZ7P/6FCfszcqOv0p1XEe5DyPc6hX2wRJBUHgW8Q3GYvmf2TPJ0cmJVxbMBk8+qG85JuJJwP6mQbHkwmAlksl98lN8XOV0RCuPBwP8chYg9fPx+/G+NEkCE9pK1vpf3f6RMwZJTsjuirZ7Z/ZpDOEneA6kJtCD7dlJKPacajVPTVk/UoyM9H2hoKgJmFdzmVoPgyFdMCecGhFjCiORnbeuNAubUw/tJ5vceSL7fF+tAYBiE+GaY9AH7tqtG3OoUkeElr0kkNj9ShyWMRmToNCskVFu4ygOM8WVgBLcBHx20iYsmk2IOGorc/rAbF2mm97iIbZbR/+Be+gG6MmmqwCeHMHG/GlTR8eV8X+x2dpFRpl4zRo0K+1akqAq31o9njBd5u5J/oCEO7ou42t6eluKJoKhaK0He3liGJIn//c2InD+2sHwUatrql/VGTTD9+V31u+Of+mSgswdRUTLipi+zQPabtZWPcruBmEJj3plINaRe4CEcJOw2El7faEVZuSLN5GETdB2cIES50SCwhKxgTLWz5lGNUAwgcgAFHa0suN4RHvkw7aOK6VwoNQFQHlreGDbiHV+438WZx0cwJPXL6QZMCwIrRTZdrdyxvRzK49DXtquhfsgTs9ovf0="
  file: "$TRAVIS_BUILD_DIR/dist/**/*.{tar.gz,zip}"
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
    condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
notifications:
  slack:
    secure: "X+Fo9NhIh0+fywa5tj4u9LT7kbBhKoDHcOsVqECxZjjHRuuiazj3TyKQUD9IzeTgYN7Kn3qBdcjJ4Rw7uFMqZurTykKpxsTHhvcqu5m4DMd/PxkamIBiQiyQCD6tAGYz1kcJUgXVBP7LuVwC2/oCGreqcXdo37vbD6Xy3G+DX5W8Q6cSqVMg8ERguCab+Zi1OyA/BSOgKMm0PehzUbKbTJ/zSNosyzIP+Sfc/YM3r3xWreqh7SlNKmZYZqOdZTkyoHE4uDbyLCL+sSDQjxpvAl/KqfgHYS9TMop5blSvqfsqzJiaNm6P5J6j3ElQFoLhFEm4/NZ937jQ9tXMRIX7t5g1qmM9R7FlZd0aXQJDVAgGj9R0Hvx28YVf2gDQJ9Z/cAXiiBNhRpR1Qu2YXQtITBtgxWFWs3O4XMwljlhTQID62+yxG5T/tqHUNyLaTh6+PvrJ3VdrHIxqQ7dfVUDWoEEX1UuMSo7arYW+ddSzfliqWPxfDvZSdTfVWG8Xf0bDQdV4ucsEfM0ro6KVFhG5meBAR8Hj5ISG5y7tQsMaX68BXqvLoRsgO2v2Wnp3BxKwmQjelyVTqMcQG6vftZ3Plf1e1Dsox+oL1S9UT/v5m9rnOIJlOVGoVZMb9QIEOfhExhJSqj4ECDwhvGxtr2QHxqAM58amlb6PJZ/JGtcYrmw="
